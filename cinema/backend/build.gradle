plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.protobuf' version '0.9.4'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven {
		url 'https://packages.confluent.io/maven/'
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.session:spring-session-core'
	implementation 'org.modelmapper:modelmapper:3.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.kafka:spring-kafka'
	implementation 'org.apache.kafka:kafka-clients'
	implementation 'io.confluent:kafka-protobuf-serializer:7.6.1'
	implementation 'io.grpc:grpc-protobuf:1.58.0'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	implementation 'io.grpc:grpc-stub:1.58.0'
	implementation 'io.github.lognet:grpc-spring-boot-starter:5.1.5'
	implementation "com.google.protobuf:protobuf-java:3.12.4"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

// JJWT Dependencies
	implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.3'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.3'
}

protobuf {
	protoc {
		artifact = "com.google.protobuf:protoc:3.12.4"
	}
	plugins {
		grpc {
			artifact = "io.grpc:protoc-gen-grpc-java:1.64.0"
		}
	}
	generateProtoTasks {
//		all().each { task ->
//			task.builtins {
//				java {
//					// Remove the 'lite' option as it is causing issues
//				}
//			}
//		}
		all()*.plugins {
			grpc {}
		}
	}
}

//sourceSets {
//	main {
//		java {
//			srcDirs 'src/main/java', 'build/generated/source/proto/main/java'
//		}
//	}
//}
sourceSets {
	main {
		proto {
			srcDir 'src/main/java'
		}
		java {
			srcDirs 'build/generated/source/proto/main/java'
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}